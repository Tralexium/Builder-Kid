<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1010</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init vars

t = 0;
opt_index = 0;  // 0: yes, 1: no
option_selected = false;

overlay_alpha = 0;
fade_alpha = 0

go_alpha = 0;
go_x = room_width/2;
go_y = 48
go_y_start = go_y;
go_y_travel = 48;
go_anim_duration = 50;

anim_await_duration = 50; // waiting time in between the 2 animations

text_alpha = 0;
text_x = go_x;
text_y = 166
text_y_start = text_y;
text_opt_ysep = 56;
text_opt_xsep = 50;
text_opt_xsep_start = text_opt_xsep
text_opt_x_travel = 20;
text_opt_y_travel = 20;
text_anim_duration = 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animations &amp; input

t++;

// game over &amp; black overlay
if(t &lt;= go_anim_duration) {
    go_y = scrAlexEaseOutSine(t, go_y_start, go_y_start+go_y_travel, go_anim_duration);
    go_alpha = scrAlexEaseOutSine(t, 0, 1, go_anim_duration);
    overlay_alpha = scrAlexEaseOutSine(t, 0, .75, go_anim_duration);;
}

// text
var passed_t = go_anim_duration+anim_await_duration;
if(t &gt; passed_t &amp;&amp; t &lt;= text_anim_duration+passed_t) {
    text_opt_xsep = scrAlexEaseOutSine(t-passed_t, text_opt_xsep_start, text_opt_xsep_start+text_opt_x_travel, text_anim_duration)
    text_y = scrAlexEaseOutSine(t-passed_t, text_y_start, text_y_start+text_opt_y_travel, text_anim_duration)
    text_alpha = scrAlexEaseOutSine(t-passed_t, 0, 1, go_anim_duration);
}

// Input
passed_t += text_anim_duration;
if(t &gt; passed_t &amp;&amp; !option_selected) {
    var input = scrButtonCheckPressed(global.rightButton) - scrButtonCheckPressed(global.leftButton);
    opt_index += input
    
    if(opt_index &lt; 0)
        opt_index = 1;
    if(opt_index &gt; 1)
        opt_index = 0;
    
    if(input != 0) {
        audio_stop_sound(sndAlexUIMove);
        audio_play_sound(sndAlexUIMove, 0, false);
    }
    
    if(scrButtonCheckPressed(global.jumpButton) || scrButtonCheckPressed(global.shootButton)) {
        option_selected = true;
        audio_play_sound(sndAlexUISelect, 0, false);
    }
}

// Fade out after selecting
if(option_selected) {

    fade_alpha += .03;
    
    if(fade_alpha &gt; 2) {
        // Reload stage from last wave
        if(opt_index == 0) {
            room_restart();
        } 
        // Restart from the beginning
        else {
            // Reset all progress
            global.keep_data = false;
            
            room_restart();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw this shit

display_set_gui_size(view_wview[0], view_hview[0]);

draw_set_alpha(overlay_alpha)
draw_set_colour($2e1814)
draw_rectangle(-1000, -5, room_width+1000, room_height+5, false)

draw_sprite_ext(sprAlexGameOver, 0, go_x, go_y, 1, 1, 0, -1, go_alpha);

draw_set_font(fAlexSmall)
draw_set_halign(fa_center)
draw_set_valign(fa_middle)
draw_set_alpha(text_alpha)

scrDrawTextOutline(text_x, text_y, "Would you like to restart from the last wave?", c_white, c_black)

draw_set_font(fAlexMedium)
var opt_y = text_y+text_opt_ysep
scrDrawTextOutline(text_x-text_opt_xsep, opt_y, "YEAH", c_white, c_black)
scrDrawTextOutline(text_x+text_opt_xsep, opt_y, "NOPE", c_white, c_black)

var cursor_x = (room_width/2)-text_opt_xsep;
if(opt_index == 1)
    cursor_x = (room_width/2)+text_opt_xsep; 
draw_sprite_ext(sprAlexSellButtonCursor, t/5, cursor_x, opt_y, 1, 1, 0, -1, text_alpha)

draw_set_alpha(fade_alpha);
draw_set_colour(c_black)
draw_rectangle(-1000, -5, room_width+1000, room_height+5, false)

draw_set_alpha(1);
display_set_gui_size(view_wport[0], view_hport[0]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
